				ARRAY ASSIGNMENT

1. int max(int x[])*
2. int min(int x[])*
3. int max1(int x[][])*
4. int min1(int x[][])*
5. void sort(int x[])*
6. void sortl(int x[][])-
7. void mergesort(int x[], int y[])*
7. void mergesort(int x[], int y[])*
8. void union(int x[], int y[])*
9. void intersection(int x[], int y[])*
10. void matrixadd(int x[][], int y[][])*
11. void matrixmult(int x[][], int y[][])*
12. void matrixtranspose(int x[][])*
13. void matrixsum(int x[][])*
14. void triangleAsum(int x[][])*
15. void triangleAmax(int x[][])*
16. void triangleAmin(int x[][])*
17. void triangleBsum(int x[][])*
18. void triangleBmax(int x[][])*
19. void triangleBmin(int x[][])*
20. void shift(int x[])*
21. void frequencycount(int x[])*
22. void firstnonrepeatingelement(int x[])*
23. int binarytodecimal(int x[])*
24. void maxinonerow(int x[][])-
25. void numtoword(int x[])- 
26. void printdigonalwise (int x[])-
27. void sequencedigonalwise (int x[][])-
28. void printtrianglewise (int x[])-
29. void LCM(int x[])*
30. void HCF(int x[])*
31. int find3rdLargestValueInArray(int x[]) (without sorting)*
32. float findMedian(int z[])*
33. float findMean(int z[])*
34. float findMode(int z[])*
35. void makeAllElementZero(int x[5][5])*

36.* WAP to find Kth smallest element in unsorted Array
		input arr[]={7,10,4,3,20,15}
			k=3
			Ouput=7
		input arr[]={7,10,4,3,20,15}
			k=4
			Ouput=10
37.* Given an array of elements. The task is to sort the array and calculate the 
	cumulative frequency of each element of the array
	Input arr[]={1,3,2,1,2,4};
	output:
		1->2
		2->4
		3->5
		4->6
	Input arr[]={1,2,1,2,1,2};
	output:
		1->3
		2->6
38.* write a java program to get the majority element from an given array of integers 
	containing duplicates.
	Majority element: A majority element is an element that appears more than n/2 
	where n is the size of the array.
	input ayrr[]={1,1,2,3,1,5,3,1,1,1};
	output =1
39.- Write a java programe to find the length of the longest consecutive elements 
	sequence from a given unsorted array of integers.
	input arr[]={49,1,3,200,2,4,70,5}
	the longest consecutive elements sequence is
	[1,2,3,4,5] therefore program will return its length. I
40.- A unsorted array of integers is given you need to find the max product formed by
	multiplying three numbers. (You can not sort the array, watch out when there are 
	negative numbers)
	array[]={2,5,-2,6,-3,8,0,-7,-9,4};
41.* Find the numbers which is not repeated in array of integers, others are present for
	two times.
	input: 23,34,56,21,21,56,78,23,34
42.- Given two array sort the values of one array using the second array.
	input: String array[]={"a", "b", "c", "d", "e", "f", "g","h", "i"); 
	int array2()=(0,1,1,0,1,2,2,0,1);
	Output: ("a", "d", "h", "b", "c", "e", "i", "f", "g")
	input: array1={"g", "e", "o", "k", "s", "f", "o", "r", "g", "o", "o", "k", "s"} 
	array2=(0,1,1,0,1,2,2,0,1)
	Output ("g","k", "r", "e", "e", "g", "s", "f", "o")
43.- How to find the missing number in a given Array from number 1 to 100?
44.* What are jagged arrays in java?
	Arrays containing arrays of different length is known as jagged arrays. 
	Multidimensional arrays are also known as jagged arrays
45.* How to find all pairs on integer array whose sum is equal to given number?
46.* Write a program to remove duplicates from array in Java?
47.* There is an array with every element repeated twice except one. Find that element?
48.* How to find common elements in three sorted array?
	Given three arrays sorted in non-decreasing order, print all common elements in these arrays.
	Examples:
	inputl (1, 5, 10, 20, 40, 80)
	input2 (6, 7, 20, 80, 100)
	input3 (3, 4, 15, 20, 30, 70, 80, 120)
	Output: 20,80
49.* How find the first repeating element in an array of integers?
	Given an array of integers, find the first repeating element in it. We need to find the 
	element that occurs more than once and whose index of the first occurrence is smallest.
	Examples:
	Input: input [] (10, 5, 3, 4, 3, 5, 6)
	Output: 5 (5 is the first element that repeats)
50.- How to find the smallest positive integer value that cannot be represented as sum of any 
	subset of a given array?
	You have given a sorted array (sorted in non-decreasing order) of positive numbers, find
	the smallest positive integer value that cannot be represented as sum of elements of any 
	subset of given set. What makes it more challenging is expected time complexity of O(n)
	Examples:
	Input: (1, 3, 6, 10, 11, 15);
	Output: 2
51.* How to rearrange array in alternating positive and negative number?
	Given an array of positive and negative numbers, arrange then in an alternate fashion
	such that every positive number is followed by negative and vice-versa maintaining the 
	order of appearance.
	Number of positive and negative numbers need not be equal. If there are more positive 
	munbers they appear at the end of the array. If there are more negative numbers, they too
	appear in the end of the array.
	Example:
	Input: (1, 2, 3, -4, -1, 4)
	Output: (-4, 1, 1, 2, 3, 4)
	Input: 1-5, -2, 5, 2, 4, 7, 1, 8, 0, -8) 
	output: (-5, 5, -2, 2, 8, 4, 7, 1, 8, 0)
52.- How to find if there is a sub array with sum equal to zero?
	Examples:
	Input: (4, 2, 3, 1, -6)
	Output: true
	There is a sub-array with zero sum from index 1 to 3.
53.* same like 46
	How to remove duplicates from array in place?
	Given a sorted array, remove the duplicates in place such that each element appear 
	only once and return the new length.
	For example,
	Given input array A = [1,1,2]
	Your function should return length 2, and A is now [1,2].
54. How to remove a given element from array in Java?
	In this problem you are given an array and a value, remove all instances of that value
	in place and return the new length. The order of elements can be changed. It doesn't matter
	what you leave beyond the new length
55. How to find sub array with maximum sum in an array of positive and negative number? Here you
	have to find the contiguous sub-array within an array (containing at least one number) which 
	has the largest sum.
	For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
	the contiguous subarray [4,-1,2,1] has the largest sum = 6.
56. How to find sub array with largest product in array of both positive and negative number?
	to find the contiguous sub-array within an array (containing at least one number) which 
	has the largest product.
	For example, given the array [2,3,-2,4),
	the contiguous subarray [2,3] has the largest product = 6.
57. Write a program to find length of longest consecutive sequence in array of integers?
	Given an unsorted array of integers, find the length of the longest consecutive elements sequence.
	For example,
	Given [100, 4, 200, 1, 3, 2]
	The longest consecutive elements sequence 1s [1, 2, 3, 4]. Return its length: 4.
58. Given an array of of size n and a number k, find all elements that appear more than n/k times?
	You are given an array of size n, find all elements in array that appear more than n/k times.
	For example, if the input arrays is (3, 1, 2, 2, 1, 2, 3, 3) and kis 4, then the output should 
	be [2, 3]. Note that size of array is 8 (or n=8), so we need to find all elements that appear 
	more than 2 (or 8/4) times. There are two elements that appear more than two times, 2 and 3.
	1. Returns the largest sum of contiguous integers in the array
	Example: if the input is (-10, 2, 3, 2, 0, 5, 15), the largest sum is 8
	2. Return the sun two largest integers in an array
	3. Given an array of integers write a program that will determine if any two numbers add 
	up to a specified number N.

59. How to reverse array in place in Java

60. Minimum Steps
	You are currently at cell (1, 1) of an NXM grid. There is a rule that decides you can move
	in the grid to reach the position (N, M) rule is, that if you are at cell (x, y) then from 
	there you can either move to cell (x, x+y) or to cell (x+y, y) in one step. Your task is to
	find the minimum number of steps that you must take to reach cell (N, M) starting from 
	current po Aie. (1, 1)
	Note: If it is not possible to reach (N, M) from (1, 1), then return -1 as your output.
	Input Specification: inputi: An integer value representing the value of N 
	where 1<=N input2: An integer value representing the value of M where M<106
61. Write a program to print spiral of the given array
	int arr[][]={{10,20,30},
				 {40,50,60},
				 {70,80,90}};
	Output: 10 20 30 60 90 80 70 40 50

